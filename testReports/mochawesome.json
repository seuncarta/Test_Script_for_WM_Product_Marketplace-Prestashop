{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-03-14T08:25:50.908Z",
    "end": "2023-03-14T08:26:10.830Z",
    "duration": 19922,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "303803b8-3bb5-4ca3-902d-5a9a6c124d13",
      "title": "",
      "fullFile": "C:\\Users\\corep\\Desktop\\Testing\\Test_Script_for_WM_Product_Marjetplace-Prestashop\\TestSuite4\\TestScript2.js",
      "file": "\\TestSuite4\\TestScript2.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "01608f5c-611a-4d05-a909-c97f23360f71",
          "title": "Order History Page",
          "fullFile": "C:\\Users\\corep\\Desktop\\Testing\\Test_Script_for_WM_Product_Marjetplace-Prestashop\\TestSuite4\\TestScript2.js",
          "file": "\\TestSuite4\\TestScript2.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Order History Page\"",
              "fullTitle": "Order History Page \"before each\" hook in \"Order History Page\"",
              "timedOut": null,
              "duration": 810,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "92a912f9-d362-4856-b1b2-a474341f8706",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Order History Page\"",
              "fullTitle": "Order History Page \"after each\" hook in \"Order History Page\"",
              "timedOut": null,
              "duration": 41,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "d1241ec2-9a7c-442f-b9e8-ffd4e5388827",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should allow users to view their order history and details",
              "fullTitle": "Order History Page should allow users to view their order history and details",
              "timedOut": null,
              "duration": 16720,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Navigate to the login page\n     await driver.get('https://wealthmarketshop.com/index.php?controller=authentication&back=my-account');\n    // Enter the user credentials and submit the login form, automatically routes to page that has the order history button/link\n    await driver.findElement(By.name('email')).sendKeys('omoneferuemu@gmail.com');\n    await driver.findElement(By.name('password')).sendKeys('createaccount', Key.RETURN);\n    \n    // Find the link that leads to the order history page and click it\n    const orderHistoryBtn = await driver.findElement(By.xpath('//*[@id=\"left-column\"]/div/div/div/div/ul/li[3]/a'));\n    await orderHistoryBtn.click();\n    \n    // Wait for the order history page to load\n    await driver.wait(until.urlIs('https://wealthmarketshop.com/index.php?controller=history'), 5000);\n    \n    // Check if there are any orders displayed\n    const orders = await driver.findElements(By.xpath('//*[@id=\"content\"]/div[1]/table/tbody'));\n    expect(orders.length).to.be.greaterThan(0);\n    \n     // Retrieve the total number of orders displayed\n     const orderCountElements = await driver.findElements(By.css(\".order\"));\n     const orderCount = orderCountElements.length;\n     console.log(`Total orders: ${orderCount}`)\n     assert.ok(orderCount > 3, `Expected order count to be greater than 3, but found ${orderCount}`);\n     \n     // Click on the first order reference to view its details\n    const orderReferenceElements = await driver.findElements(By.xpath('//*[@id=\"content\"]/div[2]/div[1]/div/div[1]/h5/a'));\n    if (orderReferenceElements.length > 0) {\n        const orderReferenceElement = orderReferenceElements[0];\n        await driver.executeScript(\"arguments[0].scrollIntoView();\", orderReferenceElement);\n        await driver.executeScript(\"arguments[0].click();\", orderReferenceElement);\n        await driver.wait(until.urlContains(\"https://wealthmarketshop.com/index.php?controller=order-detail&id_order=\"), 5000);\n        } else {\n        throw new Error(\"No order IDs found on the page.\");\n    }\n    // Click on the first order to view its details\n    // const firstOrder = orders[0];\n    // await firstOrder.click();\n    \n \n    // // Check if the order details are displayed\n    // const orderNumber = await driver.findElement(By.xpath('//*[@id=\"order-infos\"]/div[1]/div/div[1]/strong')).getText();\n    // expect(orderNumber).to.include(/^Order #\\d+$/);\n    \n    // // Verify that the order details are displayed\n    // const orderDetailsElement = await driver.findElement(By.xpath('//*[@id=\"order-infos\"]/div[1]/div/div[1]/strong'));\n    // const orderDetailsText = await orderDetailsElement.getText();\n    // assert.strictEqual(orderDetailsText, \"Order Details\\n\\nOrder #1234\\n\\nProduct: Example Product\\nPrice: $19.99\\nQuantity: 2\\n\\nTotal: $39.98\");\n    // // Check if the order status is present\n    // const status = await driver.findElement(By.xpath('//*[@id=\"content\"]/div[2]/div[2]/div/div[1]/div[3]')).getText();\n    //  // Check if the order status matches our order status available\n    //  const orderStatus = await driver.findElement(By.xpath('//*[@id=\"content\"]/div[2]/div[1]/div/div[1]/div[3]/span')).getText();\n    //  expect(['Payment accepted', 'Awaiting bank wire payment', 'Delivered', 'Awaiting Cash On Delivery validation']).to.include(orderStatus.toLowerCase());\n \n   // Check if the order status matches our order status available\n   const price = await driver.findElement(By.xpath('//*[@id=\"content\"]/div[1]/table/tbody/tr[1]/td[2]/span')).getText();\n   expect(['â‚¦15,000']).to.include(price.toLowerCase());",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"content\"]/div[1]/table/tbody/tr[1]/td[2]/span\"}\n  (Session info: chrome=110.0.5481.180)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"content\"]/div[1]/table/tbody/tr[1]/td[2]/span\"}\n  (Session info: chrome=110.0.5481.180)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:587:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:515:28)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:145:15)\n    at async C:\\Users\\corep\\Desktop\\Testing\\Test_Script_for_WM_Product_Marjetplace-Prestashop\\node_modules\\selenium-webdriver\\lib\\webdriver.js:195:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:189:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:194:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:743:22)",
                "diff": null
              },
              "uuid": "b79c56a4-7819-40f0-aa5b-ddbfc6d66be4",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b79c56a4-7819-40f0-aa5b-ddbfc6d66be4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16720,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "testReports",
        "": true
      },
      "version": "6.2.0"
    }
  }
}
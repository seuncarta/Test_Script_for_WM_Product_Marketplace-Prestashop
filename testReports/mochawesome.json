{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-09T15:39:11.015Z",
    "end": "2023-03-09T15:39:28.345Z",
    "duration": 17330,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cbeffb77-5f24-4a01-830b-5d5b41231f6a",
      "title": "",
      "fullFile": "C:\\Users\\USER\\Desktop\\Test_Script_for_WM_Product_Marjetplace-Prestashop\\TestSuite3\\TestCase1.js",
      "file": "\\TestSuite3\\TestCase1.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "56dbb94c-e905-4c73-b42a-b973459e21be",
          "title": "Verify listing of a product by a seller from product database",
          "fullFile": "C:\\Users\\USER\\Desktop\\Test_Script_for_WM_Product_Marjetplace-Prestashop\\TestSuite3\\TestCase1.js",
          "file": "\\TestSuite3\\TestCase1.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Verify listing of a product by a seller from product database\"",
              "fullTitle": "Verify listing of a product by a seller from product database \"before all\" hook in \"Verify listing of a product by a seller from product database\"",
              "timedOut": null,
              "duration": 1146,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();",
              "err": {},
              "uuid": "8ab89e88-b95e-4ed4-a0ff-7a183df809e2",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Verify listing of a product by a seller from product database\"",
              "fullTitle": "Verify listing of a product by a seller from product database \"after all\" hook in \"Verify listing of a product by a seller from product database\"",
              "timedOut": null,
              "duration": 502,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "69f5f462-780d-40ef-a167-ecdf7ed9f537",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Verify that when a seller search for a product name, the result table contains products with the searched name",
              "fullTitle": "Verify listing of a product by a seller from product database Verify that when a seller search for a product name, the result table contains products with the searched name",
              "timedOut": null,
              "duration": 10388,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the log in page on the service marketplace\nawait driver.get('https://wealthmarketshop.com/index.php?controller=authentication&back=my-account');\nawait driver.manage().window().maximize();\n// Fill in the login form\nconst emailInput = await driver.findElement(By.name('email'));\nemailInput.sendKeys('seunjr7@gmail.com');\nconst passwordInput = await driver.findElement(By.name('password'));\npasswordInput.sendKeys('economicedu156');\n// Submit the login form\nconst loginButton = await driver.findElement(By.id('submit-login'));\nloginButton.click();\nawait driver.wait(until.urlIs('https://wealthmarketshop.com/index.php?controller=my-account'), 5000, 'Should load dashboard page');\n//Scrolldown the window\nawait driver.executeScript(\"window.scrollBy(0, 500)\");\n// The element that holds the seller product menu \nawait driver.findElement(By.xpath(\"/html/body/main/section/div/div/div/div[2]/div/section/section/div/div/div/a[3]/span\")).click();\n//Wait for 5 seconds before looking for the element\nawait driver.manage().setTimeouts({ implicit: 5000 });\n//Verifying the text of the page\nconst textOnPage = await driver.findElement(By.xpath(\"//div/div/div[1]/b/i\")).getText();\nexpect(textOnPage).to.equal(\"The product you want to list may already be in the global catalog. If so, you will not need to re-list it. Start by checking here.\")\nconsole.log(textOnPage);\nawait driver.findElement(By.xpath(\"/html/body/main/section/div/div/div/div/div/div/div[2]/div/div/div[2]/div[1]/a\")).click();\n//Locate the search bar and search for a product to add in this case Honeywell Semolina 10kg\nlet nameOfProduct = \"Honeywell\"\nawait driver.findElement(By.id(\"input_existing_product\")).sendKeys(nameOfProduct);\n//Taping the enter button to carryout the search goes on to list the product as a now one this is wrong.\n//So we must click on the search bar, as can be seen below\nawait driver.findElement(By.id(\"btn_search_exsisting_products\")).click();\n//Checking the result table to see if the results include the search product\n// Replace the following selector with the actual selector of the table on your page\nconst resultTable = await driver.findElement(By.xpath(\"//tbody\"));\n//The count of the reuslt it found, for debug purposes\nlet rowCount = await resultTable.findElements(By.css('tr')).then(rows => rows.length);\nconsole.log(rowCount);\n// What was searched for to verify against the result table\nconst searchString = nameOfProduct;\n// Get all the rows in the table\nconst rows = await resultTable.findElements(By.css(`tr`));\n\n// Loop through each row\ntry {\n    for (let i = 0; i < rows.length; i++) {\n        const row = rows[i];\n        // Get all the cells in the row\n        const cells = await row.findElements(By.css('td'));\n        // Loop through each cell\n        for (let j = 0; j < cells.length; j++) {\n            const cell = cells[j];\n            // Get the text of the cell\n            const cellText = await cell.getText();\n            // Check if the cell text contains the search string\n            if (cellText.includes(searchString)) {\n                // If the search string is found, assert that the test passes\n                assert.ok(true, `${searchString} was found in the table`);\n                // Return to exit the function once the string is found\n                return;\n            }\n        }\n    }\n} catch (err) {\n    // If the search string is not found, assert that the test fails\n    assert.fail(`${searchString} was not found in the table`);\n}",
              "err": {},
              "uuid": "1bdf6582-5a5d-4eb9-92d1-08ab7e8a963f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valid scenario: Verify listing of a product from the product database",
              "fullTitle": "Verify listing of a product by a seller from product database Valid scenario: Verify listing of a product from the product database",
              "timedOut": null,
              "duration": 4708,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the log in page on the service marketplace\n await driver.get('https://wealthmarketshop.com/index.php?controller=authentication&back=my-account');\n //Because I have logged in form test script 1 above visting the above url automatically signs me in        \n // await driver.wait(until.urlIs('https://wealthmarketshop.com/index.php?controller=my-account'), 5000, 'Should load dashboard page');\n \n //Scrolldown the window\n // await driver.executeScript(\"window.scrollBy(0, 500)\");\n \n // The element that holds the seller product menu \n await driver.findElement(By.xpath(\"/html/body/main/section/div/div/div/div[2]/div/section/section/div/div/div/a[3]/span\")).click();\n \n //Wait for 5 seconds before looking for the element\n await driver.manage().setTimeouts({ implicit: 5000 });\n \n //Verifying the text of the page\n const textOnPage = await driver.findElement(By.xpath(\"//div/div/div[1]/b/i\")).getText();\n expect(textOnPage).to.equal(\"The product you want to list may already be in the global catalog. If so, you will not need to re-list it. Start by checking here.\")\n console.log(textOnPage);\n \n await driver.findElement(By.xpath(\"/html/body/main/section/div/div/div/div/div/div/div[2]/div/div/div[2]/div[1]/a\")).click();\n \n //Locate the search bar and search for a product to add in this case \tHoneywell Semolina 10kg\n let nameOfProduct = \"Honeywell\"\n await driver.findElement(By.id(\"input_existing_product\")).sendKeys(nameOfProduct);\n \n //Taping the enter button to carryout the search goes on to list the product as a now one this is wrong.\n //So we must click on the search bar, as can be seen below\n await driver.findElement(By.id(\"btn_search_exsisting_products\")).click();\n \n //Wait for 5 seconds before looking for the element\n await driver.manage().setTimeouts({ implicit: 5000 });\n \n  await driver.findElement(By.xpath(\"//tbody/tr[1]/td[4]\")).click();",
              "err": {},
              "uuid": "d64bf750-b6d7-4b51-a284-3c4f5b1b7652",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1bdf6582-5a5d-4eb9-92d1-08ab7e8a963f",
            "d64bf750-b6d7-4b51-a284-3c4f5b1b7652"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15096,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "testReports",
        "": true
      },
      "version": "6.2.0"
    }
  }
}